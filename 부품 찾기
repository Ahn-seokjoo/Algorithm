//이진 탐색으로 풀 때
def binary_search(array,target,start,end):
  while start <= end:
    mid = (start + end) // 2
    
    if array[mid] == target:
      return mid
    elif array[mid] > target:
      end = mid -1
      return binary_search(array,target,start,end)
    else:
      start = mid + 1
      return binary_search(array,target,start,end)
    return None

n = int(input())
array = []
array2= []
array = list(map(int,input().split()))
array.sort()
m = int(input())
array2 = list(map(int,input().split()))

for k in array2:
  result = binary_search(array,k,0,n-1)
  if result == None:
    print("no",end=' ')
  else:
    print("yes",end=' ') 

// 계수 정렬을 통해 
n = int(input())
array = [0]*100001

for i in input().split():
  array[int(i)] = 1

m = int(input())
x= list(map(int,input().split()))

for i in x:
  if array[int(i)]== 1:
    print('yes',end= ' ')
  else:
    print('no',end=' ')
 
 //이런 식으로 푼다면, 최악의 경우 200만번의 연산을 해야할 수도 있다.
 
 n = int(input())
array_a = list(map(int,input().split()))

m = int(input())
array_b = list(map(int,input().split()))

for i in range(len(array_b)):
  if array_b[i] in array_a:
    print("yes",end=' ')
  else:
    print("no",end=' ')
 
